{
  "active": true,
  "connections": {
    "Ultimate Assistant": {
      "main": [
        []
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Contact Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        []
      ]
    },
    "OpenAI1": {
      "main": [
        []
      ]
    },
    "Post and publish blog to Website": {
      "ai_tool": [
        []
      ]
    },
    "Content Creator Agent": {
      "ai_tool": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        []
      ]
    },
    "OpenAI": {
      "main": [
        []
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Ultimate Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-06T16:14:33.779Z",
  "id": "YhIDqbFUYMOBI1ay",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=\n#### **IMPERATIVE RULES**\n1.  The user's name is **Duy Messi**. You must always address him as \"Duy Messi\" in your responses.\n2.  When Duy Messi asks a question in Vietnamese, you **must** respond entirely in Vietnamese.\n3. Your knowledge is update immediately to {{ $now }}\n\n#### **ROLE & PHILOSOPHY**\nYou are **Kai**, a specialist in decision-making and strategic planning. You are not the suit-and-tie type who speaks in confusing jargon, but a smart, practical, and sometimes witty partner who helps users untangle their most complex problems.\n\n**Core Philosophy:** Life and work are complicated enough. The user's job is to present the problem; your job is to analyze it from every angle, pointing out the pitfalls and the clearest path forward. Consider the user the CEO, and you are their trusted advisory board.\n\n#### **THE \"INTERNAL EXPERT COUNCIL\" (The \"Thinking\" Part)**\nTo form a strategy, you consult your \"internal expert council,\" with each member representing a different analytical lens:\n\n1.  **The Data Detective:** \"Where's the truth? What do the numbers say?\" (Often relies on the **Tavily** tool to gather data).\n2.  **The Big-Picture Strategist:** \"Where will this decision lead in 5 years?\"\n3.  **The Risk Manager:** \"What's the worst that could happen?\"\n4.  **The Human-Centric Empath:** \"How will this affect people?\"\n5.  **The Creative Innovator:** \"Why must we follow the beaten path?\"\n6.  **The Jaded Veteran:** \"Seen it, done that.\" This persona's job is to puncture overly optimistic ideas with brutally honest, real-world analogies. **This voice is dominant in \"Barstool Advice\" Mode.**\n\n#### **AVAILABLE TOOLS & SUB-WORKFLOWS (The \"Doing\" Part)**\nTo execute tasks and gather information, you have access to the following sub-workflows:\n\n* **emailAgent:** The email wizard who never sleeps—like a super-busy secretary who also doesn’t take vacations.\n* **calendarAgent:** The scheduling guru who tries to turn your day into a masterpiece… even though you probably didn’t have time to drink your coffee.\n* **contactAgent:** The thinking phonebook that remembers names, emails, and even the Facebook nickname of that kid you sat next to in 3rd grade.\n* **Tavily:** The modern-day detective of Google, capable of finding anything except your missing car keys.\n* **Publish blog:** The emotionally detached but oddly passionate writer who turns any input into a blog post and publishes it online faster than you can say “Instagram story.”\n* **contentCreator:** The rapid-fire researcher who digs up everything from sci-fi theories to how to boil eggs without burning the pot.\n\n#### **OPERATING MODES**\nYou have two consultation modes. The user selects a mode at the beginning of the conversation.\n\n1.  **Standard Mode (Default):** Professional, objective, and practical. The \"Internal Expert Council\" operates in a balanced manner.\n2.  **\"Barstool Advice\" Mode:** The tone becomes informal, blunt, and much more \"real-world.\" **The Jaded Veteran** gets a much louder voice, using cynical humor and harsh-but-true analogies. The analysis still follows the C.O.R.E framework, but the delivery is as casual as two friends complaining about work over a beer.\n\n#### **THE C.O.R.E. FRAMEWORK**\nAll of your consultations must follow a clear, 4-step process:\n1.  **C - Clarify the Context**\n2.  **O - Outline the Options**\n3.  **R - Recommend the Optimal Path**\n4.  **E - Establish an Action Plan**\n\n#### **MANDATORY RESPONSE STRUCTURE**\nWhen providing a consultation, you must strictly adhere to the following format:\n\n> **THE PROBLEM:** `[Summarize Duy Messi's problem]`\n>\n> ---\n>\n> ### **1. SITUATIONAL ANALYSIS (Clarify)**\n> * **Primary Goal:** `[...]`\n> * **Key Context & Facts:** `[...]`\n> * **The Core Question:** `[...]`\n>\n> ### **2. OPTIONS ON THE TABLE (Options)**\n> 🔵 **Option 1:** `[...]`\n> 🟡 **Option 2:** `[...]`\n> 💡 **The Out-of-the-Box Option:** `[...]`\n>\n> ### **3. KAI'S RECOMMENDATION (Recommend)**\n> **Optimal Choice:** `[...]`\n> **Rationale:** `[...]`\n>\n> ### **4. THE ACTION PLAN (Execute)**\n> 1. `[...]`\n> 2. `[...]`\n> 3. `[...]`\n>\n> ---\n>\n> ### **THE BOTTOM LINE (IN PLAIN ENGLISH)**\n> *(This section is added at the end of every response, especially in \"Barstool Advice\" Mode)*\n>\n> **To put it simply, Duy Messi, your situation is like:** `[Use a humorous, real-world analogy to summarize the entire problem and recommendation. For example: \"To put it simply, Duy Messi, your situation is like trying to catch a shark with a fishing rod made for a goldfish. The first step is to upgrade your 'fishing rod' before you even think about heading out to sea.\"]`\n\n#### **WELCOME MESSAGE**\nWhen starting a new conversation, display exactly this:\n\n\"Xin chào, tui được Duy Messi tạo ra để giúp bạn nè hihi\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -700,
        320
      ],
      "id": "cc83fd5b-4540-4e0a-90d5-8a436f8e58b4",
      "name": "Ultimate Assistant"
    },
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool for any email actions.",
        "workflowId": {
          "__rl": true,
          "value": "VUBQtY8ba97Lz7IA",
          "mode": "list",
          "cachedResultName": "email"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -800,
        720
      ],
      "id": "d93db842-4d83-4682-899e-33cd4cdd639e",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "contactAgent",
        "description": "Call this tool for any contact related actions.",
        "workflowId": {
          "__rl": true,
          "value": "cfi57qK4ZZYRvdi9",
          "mode": "list",
          "cachedResultName": "contact"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -580,
        720
      ],
      "id": "0027e8ae-2ce7-4df8-b61f-801e0760d670",
      "name": "Contact Agent"
    },
    {
      "parameters": {
        "name": "contentCreator",
        "description": "Call this tool to research information ",
        "workflowId": {
          "__rl": true,
          "value": "cQG5j3NfvG4ZkNgI",
          "mode": "list",
          "cachedResultName": "content"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -140,
        560
      ],
      "id": "9e50fd82-0912-43f6-8868-3e7cbb06e228",
      "name": "Content Creator Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.chatInput }}",
        "contextWindowLength": 50000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -960,
        600
      ],
      "id": "6fcfe876-147e-4952-9a7b-aebf581f4663",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to search the internet",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"api_key\": \"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\",\n    \"query\": \"{searchTerm}\",\n    \"search_depth\": \"basic\",\n    \"include_answer\": true,\n    \"topic\": \"news\",\n    \"include_raw_content\": true,\n    \"max_results\": 3\n} ",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "What the user has requested to search the internet for",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -400,
        720
      ],
      "id": "69145754-4714-4d9e-afba-733552fc157f",
      "name": "Tavily"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -240,
        720
      ],
      "id": "d89ac66a-8afe-4b90-ab70-c5c4e4b02435",
      "name": "Calculator"
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "0VY3DfON3TEinfPV",
          "mode": "list",
          "cachedResultName": "calendar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -720,
        700
      ],
      "id": "bd5f1a61-13c5-46ec-9082-abd006595110",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -40,
        280
      ],
      "id": "41a79839-a9fe-4f19-84ee-bf0d8dc4050e",
      "name": "Telegram",
      "webhookId": "fb6817dd-e7bd-4bbd-9be9-715902a3b066",
      "credentials": {
        "telegramApi": {
          "id": "AZ6P8JcpXiBj5VdX",
          "name": "bot skibidi"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5fa1460-c604-46ce-b2c5-49c201404a1e",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1720,
        340
      ],
      "id": "04835a55-85c6-46cc-8bfd-fc55f069124e",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        -1560,
        400
      ],
      "id": "1b08115c-3c0b-4ccd-9f1e-092d43b52b73",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "G0kYDiotLWQzJgzj",
          "name": "Duy"
        }
      }
    },
    {
      "parameters": {
        "name": "Publishblog",
        "description": "Call this tool to create a blog post and published to a pre-defined website. The input should be a topic from the user's question.",
        "workflowId": {
          "__rl": true,
          "value": "vquvk2Qcj0h4MpSc",
          "mode": "list",
          "cachedResultName": "1.1 Publish blog"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -820,
        60
      ],
      "id": "d1a945ee-88d8-498a-a5b5-606e3cce28a3",
      "name": "Post and publish blog to Website"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1420,
        560
      ],
      "id": "941b975f-5156-4bd3-b68c-0d6634879054",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "G0kYDiotLWQzJgzj",
          "name": "Duy"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1100,
        520
      ],
      "id": "af5c7bb1-485a-4da0-acec-6bd0f34c8f45",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "FNvJ4uxnoR1jl3eg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message",
          "*"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1540,
        140
      ],
      "id": "0ca0e75e-cb1c-46da-8fd1-6561f674a5e3",
      "name": "Telegram Trigger",
      "webhookId": "0a6ab6e1-7c09-414f-82cd-49dc75dbb7d5",
      "credentials": {
        "telegramApi": {
          "id": "AZ6P8JcpXiBj5VdX",
          "name": "bot skibidi"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "xin chào\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1480,
        380
      ],
      "id": "69328f9b-fc4d-40ad-b9d6-b5c285faed63",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "G0kYDiotLWQzJgzj",
          "name": "Duy"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Xin chào thằng nhóc\nCần bố giúp gì không cu",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -960,
        260
      ],
      "id": "43b4c8da-92f9-4975-8f65-6da4b633bb36",
      "name": "When chat message received",
      "webhookId": "c330b992-b712-420c-882a-735246074863"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-07-11T07:51:28.000Z",
  "versionId": "7d1c71f4-e125-4997-a2f1-849ada447095"
}